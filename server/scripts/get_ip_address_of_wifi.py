import psutil
import socket

def get_ip_address_of_wifi():
    interfaces = psutil.net_if_addrs()
    for interface, addresses in interfaces.items():
        # Проверяем, относится ли интерфейс к Wi-Fi (обычно это что-то вроде 'Wi-Fi', 'wlan0', и т.д.)
        if 'Wi-Fi' in interface or 'wlan' in interface or 'Wireless' in interface or 'wlan0' in interface or 'eth0' in interface:
            for address in addresses:
                if address.family == socket.AF_INET:  # IPv4 адрес
                    return address.address

    return "Не удалось найти Wi-Fi интерфейс."

print("get_ip_address_of_wifi -> " + get_ip_address_of_wifi())
address = get_ip_address_of_wifi()


# Этот код определяет и выводит **локальный IP-адрес устройства**, подключенного через Wi-Fi (или другой сетевой интерфейс).

# ### Основные компоненты:
# 1. **Импорт модулей**:
#    - `psutil`: Для получения информации о сетевых интерфейсах.
#    - `socket`: Для проверки типа IP-адреса (IPv4).

# 2. **Функция `get_ip_address_of_wifi`**:
#    - Использует `psutil.net_if_addrs()` для получения списка сетевых интерфейсов и их адресов.
#    - Проходит по всем интерфейсам:
#      - Проверяет, содержит ли название интерфейса ключевые слова (`Wi-Fi`, `wlan`, `Wireless`, `wlan0`, `eth0`).
#      - Проверяет, относится ли адрес к типу `socket.AF_INET` (IPv4).
#    - Возвращает найденный IPv4-адрес.

# 3. **Вывод**:
#    - Если IP-адрес найден, он выводится и сохраняется в переменной `address`.
#    - Если подходящий интерфейс не найден, возвращается сообщение: `"Не удалось найти Wi-Fi интерфейс."`.

# ### Назначение:
# Код используется для автоматического определения локального IP-адреса устройства, подключенного к сети через Wi-Fi (или, возможно, через Ethernet). Это может быть полезно, например, для настройки сетевого взаимодействия или сканирования сети.

# ### Пример работы:
# Если устройство подключено к Wi-Fi с IP-адресом `192.168.1.10`, вывод будет:
# ```
# get_local_ip.py  192.168.1.10
# ```

# ### Особенности:
# 1. **Гибкость**:
#    - Код проверяет названия интерфейсов, включая Wi-Fi, беспроводные (`wlan`) и проводные (`eth0`).
# 2. **IPv4-адреса**:
#    - Фильтрует только IPv4-адреса, игнорируя IPv6.

# ### Возможные улучшения:
# 1. **Универсальность**:
#    - Вместо проверки ключевых слов интерфейсов можно использовать `psutil.net_if_stats()` для определения активного интерфейса.
# 2. **Обработка ошибок**:
#    - Добавить проверку на случай отсутствия сетевых соединений или доступа к интерфейсам.
# 3. **Расширение**:
#    - Поддержка IPv6-адресов, если это необходимо.
